name: Build

on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
    - uses: actions/checkout@v2
    - name: Install XCB and GL dependencies
      run: |
        sudo apt-get update
        sudo apt-get install libx11-xcb-dev libxcb-dri2-0-dev libgl1-mesa-dev libxcb-icccm4-dev libxcursor-dev libasound2-dev clang libspeechd-dev libgtk-3-dev libxcb-shape0-dev libxcb-xfixes0-dev
      if: contains(matrix.os, 'ubuntu')
    - name: Install rust stable
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
    - name: Build
      run: cargo build --profile ci --verbose
    - name: Run tests
      run: cargo test --profile ci --verbose

  check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install XCB and GL dependencies
      run: |
        sudo apt-get update
        sudo apt-get install libx11-xcb-dev libxcb-dri2-0-dev libgl1-mesa-dev libxcb-icccm4-dev libxcursor-dev libasound2-dev clang libspeechd-dev libgtk-3-dev libxcb-shape0-dev libxcb-xfixes0-dev
    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true
        components: rustfmt, clippy
    - name: Format
      run: cargo fmt --all -- --check
    - uses: actions-rs/clippy-check@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        args: --all --all-features # -- -D warnings TODO: enable this when all warnings are fixed
  
  miri:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install XCB and GL dependencies
        run: |
          sudo apt-get update
          sudo apt-get install libx11-xcb-dev libxcb-dri2-0-dev libgl1-mesa-dev libxcb-icccm4-dev libxcursor-dev libasound2-dev clang libspeechd-dev libgtk-3-dev libxcb-shape0-dev libxcb-xfixes0-dev
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
          components: miri
      - uses: actions-rs/cargo@v1
        with:
          command: miri
          args: setup
      - uses: actions-rs/cargo@v1
        with:
          command: miri
          args: test --profile ci --all --all-features --verbose
